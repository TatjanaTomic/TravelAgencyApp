<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddBus" xml:space="preserve">
    <value>New bus is added successfully!</value>
  </data>
  <data name="AddBusError" xml:space="preserve">
    <value>Error while adding new bus!</value>
  </data>
  <data name="AddReceipt" xml:space="preserve">
    <value>New receipt added successfully!</value>
  </data>
  <data name="AddReceiptError" xml:space="preserve">
    <value>Error while adding receipt!</value>
  </data>
  <data name="AddReservation" xml:space="preserve">
    <value>New reservation is added successfully!</value>
  </data>
  <data name="AddReservationError" xml:space="preserve">
    <value>Error while adding new reservation!</value>
  </data>
  <data name="AddTraveller" xml:space="preserve">
    <value>New traveller is added successfully!</value>
  </data>
  <data name="AddTravellerError" xml:space="preserve">
    <value>Error while adding new traveller!</value>
  </data>
  <data name="BusSeat" xml:space="preserve">
    <value>Enter number of bus and number of seat!</value>
  </data>
  <data name="BusSeatError" xml:space="preserve">
    <value>Error while reading data - number of bus and number of seat must be integer numbers!</value>
  </data>
  <data name="ChooseReservation" xml:space="preserve">
    <value>Choose reservation you want to add receipt for!</value>
  </data>
  <data name="DeleteBus" xml:space="preserve">
    <value>Do you really want to delete bus </value>
  </data>
  <data name="DeleteConf" xml:space="preserve">
    <value>Delete confirmation</value>
  </data>
  <data name="DeleteData" xml:space="preserve">
    <value>Data is deleted successfully!</value>
  </data>
  <data name="DeleteDataError" xml:space="preserve">
    <value>Error while deleting data!</value>
  </data>
  <data name="DeleteReceiptConf" xml:space="preserve">
    <value>If you delete receipt, the reservation will be deleted too! Do you want to continue?</value>
  </data>
  <data name="DeleteResConf" xml:space="preserve">
    <value>Do you want to delete reservation?</value>
  </data>
  <data name="DeleteReservationConf" xml:space="preserve">
    <value>There is receipt for that reservation. If you delete reservation, the receipt will be deleted too! Do you want to continue?</value>
  </data>
  <data name="DeleteTravel" xml:space="preserve">
    <value>Do you want to delete travel </value>
  </data>
  <data name="DeleteTraveller" xml:space="preserve">
    <value>Do you want to delete traveller </value>
  </data>
  <data name="EndedOfferError" xml:space="preserve">
    <value>Error - the offer is ended!</value>
  </data>
  <data name="EnterData" xml:space="preserve">
    <value>Enter username and password to access system!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error!</value>
  </data>
  <data name="FailedLogin" xml:space="preserve">
    <value>Failed Login!</value>
  </data>
  <data name="InABus" xml:space="preserve">
    <value> in a bus </value>
  </data>
  <data name="IncompleteEntry" xml:space="preserve">
    <value>Incomplete entry</value>
  </data>
  <data name="NumberOfSeats" xml:space="preserve">
    <value>Error while reading data!\nNumber of seats in a bus must be integer number.</value>
  </data>
  <data name="Offer" xml:space="preserve">
    <value>Offer: </value>
  </data>
  <data name="ReceiptError" xml:space="preserve">
    <value>Error - receipt already exists for that reservation!</value>
  </data>
  <data name="RequiredFields" xml:space="preserve">
    <value>All fields are required!</value>
  </data>
  <data name="Reserved" xml:space="preserve">
    <value> is reserved. Choose another seat.</value>
  </data>
  <data name="Seat" xml:space="preserve">
    <value>Seat </value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>Fields First Name, Last Name and Jmb are required!</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>Do you want to delete trip </value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>You can not delete trip because it has reservations!</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>You can not delete traveller if there are some reservations and receipts for him!</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>Check if the reservation already exists!</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>Jmb must contain 13 numbers, ID Card Number 9 numbers and Passport Number 8 numbers!</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>You can not delete travel because it has reservations!</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>Fields Name and Transport Costs are required!</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>Error reading data - prices must be a numbers!</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>New travel is added successfully!</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>Error while adding new travel!</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>New trip is added successfully!</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>Error adding new trip!</value>
  </data>
  <data name="Traveller" xml:space="preserve">
    <value>Traveller: </value>
  </data>
  <data name="TravellerOffer" xml:space="preserve">
    <value>Select traveller and offer!</value>
  </data>
  <data name="UpdateData" xml:space="preserve">
    <value>Data is updated successfully!</value>
  </data>
  <data name="UpdateDataError" xml:space="preserve">
    <value>Error while updating data!</value>
  </data>
  <data name="WrongLoginData" xml:space="preserve">
    <value>Enter correct username and password to access system!</value>
  </data>
</root>